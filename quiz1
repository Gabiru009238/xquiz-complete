// ========================================
// XQUIZ - EDITOR.JS (COMPLETO)
// 25+ Elementos Interativos + Drag & Drop
// Salvar/Carregar + Exportar Standalone
// ========================================

document.addEventListener('DOMContentLoaded', () => {
  const canvas = document.getElementById('canvas');
  const elements = document.querySelectorAll('.element');

  // Drag & Drop
  elements.forEach(el => {
    el.addEventListener('dragstart', e => {
      e.dataTransfer.setData('text/plain', el.dataset.type);
    });
  });

  canvas.addEventListener('dragover', e => e.preventDefault());
  canvas.addEventListener('drop', e => {
    e.preventDefault();
    const type = e.dataTransfer.getData('text/plain');
    const node = createElement(type);
    canvas.appendChild(node);
  });
});

// ========================================
// CRIAÇÃO DE ELEMENTOS (25+ INTERATIVOS)
// ========================================
function createElement(type) {
  const div = document.createElement('div');
  div.contentEditable = true;
  div.className = 'element-block';
  div.dataset.type = type;
  div.style.cssText = 'margin:16px; padding:16px; border:1px solid #ddd; border-radius:8px; position:relative; min-height:50px;';

  // Botão remover
  const removeBtn = document.createElement('div');
  removeBtn.innerHTML = '×';
  removeBtn.style.css = = 'position:absolute; top:4px; right:8px; font-size:1.4rem; cursor:pointer; color:#aaa;';
  removeBtn.onclick = () => div.remove();
  div.appendChild(removeBtn);

  // ========================================
  // 25+ ELEMENTOS INTERATIVOS
  // ========================================
  switch (type) {
    case 'text':
      div.innerHTML = '<p contenteditable="true"><strong>Texto editável</strong> – clique para editar.</p>';
      break;

    case 'quiz-mc':
      div.innerHTML = `
        <p><strong>Pergunta:</strong> <input placeholder="Qual seu maior desafio?" style="width:100%; padding:8px; border:1px solid #ccc; border-radius:4px;"></p>
        <label><input type="radio" name="q1"> Opção 1</label><br>
        <label><input type="radio" name="q1"> Opção 2</label><br>
        <label><input type="radio" name="q1"> Opção 3</label>
      `;
      break;

    case 'quiz-tf':
      div.innerHTML = `
        <p><strong>Verdadeiro ou Falso?</strong></p>
        <label><input type="radio" name="tf"> Verdadeiro</label><br>
        <label><input type="radio" name="tf"> Falso</label>
      `;
      break;

    case 'slider':
      div.innerHTML = `
        <p><strong>Avalie de 1 a 10:</strong></p>
        <input type="range" min="1" max="10" value="5" style="width:100%">
        <div style="text-align:center; margin-top:8px; font-weight:bold;">5</div>
      `;
      const range = div.querySelector('input[type=range]');
      const output = div.querySelector('div');
      range.oninput = () => output.textContent = range.value;
      break;

    case 'image-quiz':
      div.innerHTML = `
        <p><strong>Escolha uma imagem:</strong></p>
        <div style="display:flex; gap:10px; flex-wrap:wrap;">
          <img src="https://via.placeholder.com/100?text=Op1" width="100" style="cursor:pointer; border:2px solid transparent; border-radius:8px;" onclick="this.style.borderColor='#5a3aeb'">
          <img src="https://via.placeholder.com/100?text=Op2" width="100" style="cursor:pointer; border:2px solid transparent; border-radius:8px;" onclick="this.style.borderColor='#5a3aeb'">
        </div>
      `;
      break;

    case 'textarea':
      div.innerHTML = `<textarea placeholder="Escreva sua resposta aqui..." style="width:100%; height:100px; padding:8px; border:1px solid #ccc; border-radius:4px;"></textarea>`;
      break;

    case 'upload':
      div.innerHTML = `<input type="file" accept="image/*,application/pdf" style="padding:8px;">`;
      break;

    case 'date':
      div.innerHTML = `<label><strong>Data:</strong> <input type="date" style="padding:8px; border-radius:4px; border:1px solid #ccc;"></label>`;
      break;

    case 'timer':
      let seconds = 30;
      div.innerHTML = `<div style="font-size:2rem; font-weight:bold; text-align:center; color:#d32f2f;">00:30</div>`;
      const timerDiv = div.querySelector('div');
      const interval = setInterval(() => {
        seconds--;
        const m = String(Math.floor(seconds / 60)).padStart(2, '0');
        const s = String(seconds % 60).padStart(2, '0');
        timerDiv.textContent = `${m}:${s}`;
        if (seconds <= 0) {
          clearInterval(interval);
          timerDiv.textContent = "Tempo esgotado!";
          timerDiv.style.color = "#ff6b6b";
        }
      }, 1000);
      break;

    case 'progress':
      div.innerHTML = `
        <p><strong>Progresso do Funil:</strong></p>
        <div style="background:#eee; border-radius:8px; overflow:hidden; height:20px;">
          <div style="width:45%; background:#5a3aeb; color:white; padding:2px 8px; text-align:center; font-size:0.9rem;">45%</div>
        </div>
      `;
      break;

    case 'button':
      div.innerHTML = `<button style="padding:12px 24px; background:#5a3aeb; color:white; border:none; border-radius:8px; font-weight:600; cursor:pointer; transition:0.3s;" onmouseover="this.style.background='#4a30d1'" onmouseout="this.style.background='#5a3aeb'">Clique Aqui</button>`;
      break;

    case 'flipcard':
      div.innerHTML = `
        <div style="perspective:1000px; width:200px; height:120px; margin:0 auto;">
          <div style="position:relative; width:100%; height:100%; transition:0.6s; transform-style:preserve-3d; cursor:pointer;" onclick="this.style.transform='rotateY(180deg)'">
            <div style="position:absolute; width:100%; height:100%; backface-visibility:hidden; background:#5a3aeb; color:white; display:flex; align-items:center; justify-content:center; border-radius:8px; font-weight:bold;">Frente</div>
            <div style="position:absolute; width:100%; height:100%; backface-visibility:hidden; background:#ff6b6b; color:white; display:flex; align-items:center; justify-content:center; border-radius:8px; transform:rotateY(180deg); font-weight:bold;">Verso</div>
          </div>
        </div>
      `;
      break;

    case 'accordion':
      div.innerHTML = `
        <details style="border:1px solid #ddd; border-radius:8px; padding:8px; margin:8px 0;">
          <summary style="cursor:pointer; font-weight:600; list-style:none;">Clique para expandir</summary>
          <p style="margin-top:8px; padding:0 8px;">Conteúdo oculto aqui. Pode ser editado.</p>
        </details>
      `;
      break;

    case 'modal':
      const modalId = 'modal' + Date.now();
      div.innerHTML = `
        <button onclick="document.getElementById('${modalId}').showModal()" style="padding:10px 20px; background:#ff6b6b; color:white; border:none; border-radius:8px; cursor:pointer;">Abrir Modal</button>
        <dialog id="${modalId}" style="border:none; border-radius:12px; padding:20px; max-width:400px; box-shadow:0 10px 30px rgba(0,0,0,0.2);">
          <h3 style="margin-top:0;">Título do Modal</h3>
          <p>Este é um pop-up interativo.</p>
          <button onclick="this.parentElement.close()" style="float:right; padding:8px 16px; background:#5a3aeb; color:white; border:none; border-radius:8px; cursor:pointer;">Fechar</button>
        </dialog>
      `;
      break;

    case 'checklist':
      div.innerHTML = `
        <p><strong>Sua lista de tarefas:</strong></p>
        <label><input type="checkbox"> Comprar domínio</label><br>
        <label><input type="checkbox"> Criar funil</label><br>
        <label><input type="checkbox"> Lançar campanha</label>
      `;
      break;

    case 'stars':
      div.innerHTML = `
        <p><strong>Avalie com estrelas:</strong></p>
        <div style="font-size:1.8rem; display:flex; gap:4px;">☆☆☆☆☆</div>
      `;
      const starsDiv = div.querySelector('div');
      starsDiv.innerHTML = '★★★★★'.split('').map((_, i) => `
        <span style="cursor:pointer; color:#ccc; transition:0.2s;" 
              onmouseover="hoverStar(this.parentElement, ${i})" 
              onclick="rateStar(this.parentElement, ${i})">★</span>
      `).join('');
      window.hoverStar = (parent, i) => {
        const stars = parent.children;
        for (let j = 0; j <= i; j++) stars[j].style.color = '#ffd700';
        for (let j = i + 1; j < 5; j++) stars[j].style.color = '#ccc';
      };
      window.rateStar = (parent, i) => {
        const stars = parent.children;
        for (let j = 0; j <= i; j++) stars[j].style.color = '#ffb400';
        for (let j = i + 1; j < 5; j++) stars[j].style.color = '#ccc';
        alert(`Avaliado: ${i + 1} estrelas`);
      };
      break;

    case 'emoji':
      div.innerHTML = `
        <p><strong>Como você se sente hoje?</strong></p>
        <div style="font-size:2.5rem; display:flex; gap:12px; justify-content:center;">Terrible Neutral Happy Excited Laughing</div>
      `;
      div.querySelectorAll('div > *').forEach(e => e.style.cursor = 'pointer');
      break;

    case 'cpf':
      div.innerHTML = `<input type="text" placeholder="000.000.000-00" maxlength="14" style="padding:8px; width:100%; border:1px solid #ccc; border-radius:4px;" oninput="formatCPF(this)">`;
      window.formatCPF = (input) => {
        let v = input.value.replace(/\D/g, '');
        v = v.replace(/(\d{3})(\d)/, '$1.$2');
        v = v.replace(/(\d{3})(\d)/, '$1.$2');
        v = v.replace(/(\d{3})(\d{1,2})$/, '$1-$2');
        input.value = v;
      };
      break;

    case 'phone':
      div.innerHTML = `<input type="text" placeholder="(11) 98765-4321" maxlength="15" style="padding:8px; width:100%; border:1px solid #ccc; border-radius:4px;" oninput="formatPhone(this)">`;
      window.formatPhone = (input) => {
        let v = input.value.replace(/\D/g, '');
        v = v.replace(/^(\d{2})(\d)/, '($1) $2');
        v = v.replace(/(\d{5})(\d)/, '$1-$2');
        input.value = v;
      };
      break;

    case 'share':
      div.innerHTML = `
        <button style="padding:10px; background:#25D366; color:white; border:none; border-radius:8px; margin:4px; cursor:pointer;" onclick="shareWA()">WhatsApp</button>
        <button style="padding:10px; background:#1877F2; color:white; border:none; border-radius:8px; margin:4px; cursor:pointer;" onclick="shareFB()">Facebook</button>
      `;
      window.shareWA = () => window.open('https://wa.me/?text=' + encodeURIComponent('Confira meu funil XQuiz! ' + location.href));
      window.shareFB = () => window.open('https://www.facebook.com/sharer/sharer.php?u=' + location.href);
      break;

    case 'video':
      div.innerHTML = `<iframe width="100%" height="240" src="https://www.youtube.com/embed/dQw4w9WgXcQ" frameborder="0" allowfullscreen style="border-radius:8px;"></iframe>`;
      break;

    case 'form':
      div.innerHTML = `
        <form style="display:grid; gap:12px; max-width:400px;">
          <input type="text" placeholder="Nome completo" required style="padding:10px; border:1px solid #ccc; border-radius:4px;">
          <input type="email" placeholder="seu@email.com" required style="padding:10px; border:1px solid #ccc; border-radius:4px;">
          <input type="tel" placeholder="(11) 98765-4321" style="padding:10px; border:1px solid #ccc; border-radius:4px;">
          <button type="submit" style="padding:12px; background:#5a3aeb; color:white; border:none; border-radius:8px; font-weight:600; cursor:pointer;">Enviar Lead</button>
        </form>
      `;
      div.querySelector('form').onsubmit = (e) => {
        e.preventDefault();
        alert('Lead capturado com sucesso!');
        // Aqui você pode chamar sendToRDStation(), sendToHotmart(), etc.
      };
      break;

    default:
      div.innerHTML = `<p>Elemento: <strong>${type}</strong></p>`;
  }

  return div;
}

// ========================================
// SALVAR / CARREGAR / EXPORTAR
// ========================================
window.saveFunnel = () => {
  const canvas = document.getElementById('canvas');
  const funnelData = Array.from(canvas.children).map(el => ({
    type: el.dataset.type,
    innerHTML: el.innerHTML,
    style: el.style.cssText
  }));
  localStorage.setItem('xquiz-funnel', JSON.stringify(funnelData));
  alert('Funil salvo no navegador!');
};

window.loadFunnel = () => {
  const saved = localStorage.getItem('xquiz-funnel');
  if (!saved) return alert('Nenhum funil salvo.');
  const canvas = document.getElementById('canvas');
  canvas.innerHTML = '<p style="color:#999;">Funil carregado!</p>';
  JSON.parse(saved).forEach(data => {
    const el = document.createElement('div');
    el.innerHTML = data.innerHTML;
    el.style.cssText = data.style;
    el.dataset.type = data.type;
    el.className = 'element-block';
    canvas.appendChild(el);
  });
  alert('Funil carregado com sucesso!');
};

window.exportStandalone = () => {
  const canvas = document.getElementById('canvas');
  const funnelHTML = canvas.innerHTML;
  const fullHTML = `<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Meu Funil XQuiz</title>
  <style>
    body { font-family: 'Segoe UI', sans-serif; margin: 20px; background: #f9f9ff; }
    .element-block { margin: 16px; padding: 16px; border: 1px solid #ddd; border-radius: 8px; position: relative; }
    button, input, textarea { font-family: inherit; }
    dialog { border: none; border-radius: 12px; padding: 20px; box-shadow: 0 10px 30px rgba(0,0,0,0.2); }
  </style>
</head>
<body>
  ${funnelHTML}
  <script>
    // Reativar modais, timers, etc.
    document.querySelectorAll('dialog').forEach(d => {
      const btn = d.previousElementSibling;
      if (btn && btn.tagName === 'BUTTON') btn.onclick = () => d.showModal();
    });
    document.addEventListener('submit', e => {
      if (e.target.matches('form')) {
        e.preventDefault();
        alert('Lead capturado!');
      }
    });
  </script>
</body>
</html>`;
  const blob = new Blob([fullHTML], { type: 'text/html' });
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = `funnel-xquiz-${Date.now()}.html`;
  a.click();
  URL.revokeObjectURL(url);
  alert('Funil exportado como HTML!');
};

window.sendToBackend = async () => {
  const token = localStorage.getItem('jwt');
  if (!token) return alert('Faça login primeiro!'), showLogin();
  const canvas = document.getElementById('canvas');
  const data = Array.from(canvas.children).map(el => ({
    type: el.dataset.type,
    innerHTML: el.innerHTML,
    style: el.style.cssText
  }));
  try {
    const res = await fetch('http://localhost:3000/api/funnels', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },
      body: JSON.stringify({ name: 'Funil ' + new Date().toLocaleDateString(), data })
    });
    if (res.ok) alert('Funil salvo no servidor!');
    else alert('Erro ao salvar.');
  } catch (err) {
    alert('Erro de conexão: ' + err.message);
  }
};
